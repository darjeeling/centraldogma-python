name: Testing Central Dogma Python

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  docs:
    runs-on: ubuntu-latest
    env:
      UV_SYSTEM_PYTHON: 1
    steps:
      - uses: actions/checkout@v4
      - uses: ammaraskar/sphinx-action@master
        with:
          docs-folder: "docs/"
          pre-build-command: "python -m pip install uv && uv pip install -r requirements.txt && uv pip install sphinx_rtd_theme"

  linter:
    name: black --check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: rickstaa/action-black@v1
        id: action_black
        with:
          black_args: ". --check"

  integration-test:
    runs-on: ${{ matrix.os }}
    env:
      UV_SYSTEM_PYTHON: 1
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version:
          [
            "3.8",
            "3.9",
            "3.10",
            "3.11",
            "3.12",
            "3.13",
            "pypy3.8",
            "pypy3.9",
            "pypy3.10",
          ]

    steps:
      - uses: actions/checkout@v4
      - name: Start Central Dogma
        run: docker compose -f "docker-compose.yml" up -d --build

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          version: "latest"
          cache-dependency-glob: "requirements.txt"

      - name: Install dependencies
        run: |
          uv pip install -r requirements.txt

      - name: Test with pytest
        run: |
          INTEGRATION_TEST=true pytest --cov=centraldogma ./tests

      - name: Upload to codecov
        run: codecov

      - name: Stop containers
        if: always()
        run: docker compose -f "docker-compose.yml" down

  test:
    runs-on: ${{ matrix.os }}
    env:
      UV_SYSTEM_PYTHON: 1
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        python-version:
          [
            "3.8",
            "3.9",
            "3.10",
            "3.11",
            "3.12",
            "3.13",
            "pypy3.8",
            "pypy3.9",
            "pypy3.10",
          ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          version: "latest"
          cache-dependency-glob: "requirements.txt"

      - name: Install dependencies
        run: |
          uv pip install -r requirements.txt

      - name: Test with pytest
        run: |
          pytest --cov=centraldogma ./tests

      - name: Upload to codecov
        run: codecov
